{"version":3,"file":"index.js","sources":["compiler.js","index.js"],"sourcesContent":["import {expressionStatement, sequenceExpression} from \"babel-types\"\nimport {spreadElement, functionDeclaration} from \"babel-types\"\nimport {objectExpression, objectProperty} from \"babel-types\"\nimport {arrayExpression, callExpression} from \"babel-types\"\nimport {blockStatement, returnStatement} from \"babel-types\"\nimport {stringLiteral, identifier} from \"babel-types\"\nimport {templateLiteral, conditionalExpression} from \"babel-types\"\n\nimport template from \"babel-template\";\nimport generate from \"babel-generator\";\nimport traverse from \"babel-traverse\"\nimport {parse} from \"babylon\"\n\nvar eachTemplate = template(`OBJECT.map(function each(VALUE, KEY){\n  return BLOCK\n})`)\n\nfunction each(object) {\n  return spreadElement(eachTemplate(object).expression)\n}\n\nfunction extractExpression(value, expressions=[]) {\n  traverse(parse(';'+value), {\n    ExpressionStatement({node}) {\n      expressions.push(node.expression)\n    }\n  })\n  return expressions[0]\n}\n\nexport default class ElementCreateCompiler {\n  constructor(node, options) {\n  \tthis.node = node;\n  \tthis.options = options;\n  }\n  compile(root) {\n    this.create = identifier('$')\n    this.declarations = []\n    this.imports = []\n    this.ast = functionDeclaration(\n      identifier('template'),\n      [identifier('context')],\n      blockStatement([\n        returnStatement(\n          this.visit(this.node)\n        )\n      ])\n    )\n    return `buf.push(${JSON.stringify(generate(this.ast).code)})`\n  }\n  visit(node, index, parent) {\n    return this['visit' + node.type](node, index, parent);\n  }\n  visitBlock(block) {\n    var code, items = block.nodes\n      .map(this.visit, this)\n      .filter(node => node)\n    for (var i = items.length-1; i >= 0; i--) {\n      if(items[i] && items[i].type === 'Code') code = []\n      var index = i\n      while(items[index] && items[index].type === 'Code') {\n        code.unshift(items[index--])\n      }\n      if(index !== i) {\n        var block = this.visitCodeBlock(code)\n        items.splice(index+1, code.length, ...block)\n      }\n    }\n    console.log(items)\n    return arrayExpression(items)\n  }\n  visitTag(tag) {\n    if(tag.code) tag.block.nodes.push(tag.code)\n    return callExpression(this.create, [\n      stringLiteral(tag.name),\n      this.visitAttributes(tag.attrs),\n      this.visitBlock(tag.block)\n    ])\n  }\n  visitAttributes(attrs) {\n    return objectExpression(attrs.map(attr =>\n      objectProperty(stringLiteral(attr.name), extractExpression(attr.val))\n    ))\n  }\n  visitCode(code) {\n    if(code.val.indexOf('if') === 0) return code\n    if(code.val.indexOf('else') === 0) return code\n    if(code.val.indexOf('unless') === 0) return code\n    return extractExpression(code.val)\n  }\n  visitCodeBlock(code) {\n    if(code[0].val.indexOf('if') === 0) {\n      if(code[1] && code[1].val.indexOf('else')) {\n        return [conditionalExpression(\n          extractExpression(code[0].val.slice(2)),\n          this.visitBlock(code[0].block),\n          this.visitBlock(code[1].block)\n        )]\n      }\n    }\n    return code.map(code => extractExpression(code.val))\n  }\n  visitEach(node) {\n    return each({\n      BLOCK: this.visitBlock(node.block),\n      OBJECT: extractExpression(node.obj),\n      VALUE: extractExpression(node.val),\n      KEY: extractExpression(node.key)\n    })\n  }\n  visitText(node) {\n    return extractExpression('`'+node.val.replace(/#{/g, '${')+'`')\n  }\n}\n","import jade from \"jade\"\nimport compiler from \"./compiler\"\n\nexport default function vJade(template, options={}) {\n  return jade.render(template, Object.assign({compiler}, options))\n}\n\nglobal.$ = function(tag, attrs, children) {\n  debugger\n}\nconsole.log(\n  vJade(`\nmain(role=\"main\")\n  each post in posts\n    article(class={admin: !post.author})\n      header\n        h1 #{post.title}\n      section\n        != post.content\n      footer\n        if post.author\n          i= post.author\n        else\n          b Admin\n  `)\n)\n"],"names":["spreadElement","parse","identifier","functionDeclaration","blockStatement","returnStatement","arrayExpression","callExpression","stringLiteral","objectExpression","objectProperty","conditionalExpression"],"mappings":"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","sourceRoot":"/source/"}